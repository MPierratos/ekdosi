[tool.poetry]
name = "ekdosi"
version = "0.1.0"
description = "ekdosi, greek word for edition. This repo provides convenient methods building deep learning models"
authors = ["Michael Pierratos <mpierratos@gmail.com>"]
readme = "README.md"
packages = [
    {include = "ekdosi"},
    {include = "datasets"},
    {include = "pipelines"}
]

[tool.poetry.dependencies]
python = "^3.11"
conda-lock = "^2.4.1"
torchaudio = "2.1.0"
torchvision = "0.16.0"
torch = "2.1.0"
transformers = "^4.34.1"
scikit-learn = "^1.3.2"
peft = "^0.5.0"
omegaconf = "^2.3.0"
pydantic = "^2.4.2"


[tool.poetry.group.dev.dependencies]
ipython = "^8.16.1"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
pytest-watcher = "^0.3.4"


[tool.poetry.group.lint.dependencies]
ruff = "^0.1.1"
types-toml = "^0.10.8.7"
black = "^23.10.0"


[tool.poetry.group.typing.dependencies]
mypy = "^1.6.1"


[[tool.poetry.source]]
name = "pytorch-gpu-src"
url = "https://download.pytorch.org/whl/nightly/cu122"
priority = "explicit"

[tool.ruff]
select = [
    "E", # pycodestyle
    "F", # pyflakes
    "I", # isort
]
line-length = 100
exclude =[
    ".venv",
    ".mypy_cache",
    ".ruff_cache",
    "dist"
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["I001"]

[tool.mypy]
ignore_missing_imports = "True"
disallow_untyped_defs = "True"
exclude = ["notebooks", "dist", "tests"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
